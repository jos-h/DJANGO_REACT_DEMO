{"ast":null,"code":"var _jsxFileName = \"/home/test/Documents/Python_Assignments/RESTEXAMPLES/DjangoReact/frontend/src/UserCreateUpdate.js\";\nimport React, { Component } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport UserService from './UserService';\nconst userService = new UserService();\n\nclass UserCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.firstName = React.createRef();\n    this.lastName = React.createRef();\n    this.address = React.createRef();\n    this.contact_number = React.createRef();\n    this.email = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.id) {\n      userService.getUser(params.id).then(c => {\n        this.firstName.value = c.first_name;\n        this.lastName.value = c.last_name;\n        this.address.value = c.address;\n        this.contact_number.value = c.contact_number;\n        this.email.value = c.email;\n      });\n    }\n  }\n\n  handleCreate(firstName, lastName, contact_number, email, address) {\n    userService.createUser({\n      \"first_name\": firstName,\n      // this.firstName.value,\n      \"last_name\": lastName,\n      // this.lastName.value,\n      \"address\": address,\n      // this.address.value,\n      \"contact_number\": contact_number,\n      // this.contact_number.value,\n      \"email\": email // this.email.value,\n\n    }).then(result => {\n      alert(\"Customer created\");\n    }).catch(() => {\n      alert(\"There was error! Please re-check your form.\");\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const history = useHistory();\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n\n    if (params && params.id) {\n      this.handleUpdate(params.id);\n    } else {\n      this.handleCreate(event.target.firstName.value, event.target.lastName.value, event.target.contact_number.value, event.target.email.value, event.target.address.value);\n    } // event.preventDefault()\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"firstName\",\n      type: \"text\",\n      ref: this.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Last Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"lastName\",\n      type: \"text\",\n      ref: this.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Phone:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"contact_number\",\n      type: \"text\",\n      ref: this.contact_number,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"email\",\n      type: \"text\",\n      ref: this.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Address:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"address\",\n      type: \"text\",\n      ref: this.address,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default UserCreate;","map":{"version":3,"sources":["/home/test/Documents/Python_Assignments/RESTEXAMPLES/DjangoReact/frontend/src/UserCreateUpdate.js"],"names":["React","Component","useHistory","UserService","userService","UserCreate","constructor","props","handleSubmit","bind","firstName","createRef","lastName","address","contact_number","email","componentDidMount","match","params","id","getUser","then","c","value","first_name","last_name","handleCreate","createUser","result","alert","catch","event","preventDefault","history","handleUpdate","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { useHistory } from \"react-router-dom\"\n\nimport UserService from './UserService'\n\nconst userService = new UserService()\n\n\nclass UserCreate extends Component {\n\n    constructor(props) {\n      super(props)\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.firstName = React.createRef();\n      this.lastName = React.createRef();\n      this.address = React.createRef();\n      this.contact_number = React.createRef();\n      this.email = React.createRef();      \n    }\n\n    componentDidMount(){\n\n      const { match: { params } } = this.props;\n      if(params && params.id)\n      {\n          userService.getUser(params.id).then((c)=>{            \n            this.firstName.value = c.first_name\n            this.lastName.value = c.last_name\n            this.address.value = c.address\n            this.contact_number.value = c.contact_number\n            this.email.value = c.email          \n        })\n      }\n    }\n    \n    handleCreate(firstName, lastName, contact_number, email, address){\n      \n      userService.createUser(\n            {              \n              \"first_name\": firstName, // this.firstName.value,\n              \"last_name\": lastName, // this.lastName.value,\n              \"address\": address, // this.address.value,\n              \"contact_number\": contact_number, // this.contact_number.value,\n              \"email\": email, // this.email.value,\n            }).then((result) => {\n                alert(\"Customer created\")                \n            }).catch(() =>{\n                alert(\"There was error! Please re-check your form.\")\n            })\n    }\n\n    handleSubmit(event) {\n      event.preventDefault()\n      const history = useHistory()\n      const { match: { params } } = this.props\n      if (params && params.id) {\n          this.handleUpdate(params.id)\n      }\n      else{\n        this.handleCreate(\n          event.target.firstName.value, event.target.lastName.value, \n          event.target.contact_number.value, event.target.email.value, \n          event.target.address.value\n          )\n      }\n      // event.preventDefault()\n    }\n\n    render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              First Name:</label>\n              <input className=\"form-control\" name='firstName' type=\"text\" ref={this.firstName } />\n\n            <label>\n              Last Name:</label>\n              <input className=\"form-control\" name='lastName'  type=\"text\" ref={this.lastName}/>\n\n            <label>\n              Phone:</label>\n              <input className=\"form-control\" name='contact_number'  type=\"text\" ref={this.contact_number} />\n\n            <label>\n              Email:</label>\n              <input className=\"form-control\" name='email'  type=\"text\" ref={this.email} />\n\n            <label>\n              Address:</label>\n              <input className=\"form-control\" name='address'  type=\"text\" ref={this.address} />\n\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        );\n  }\n}\n\nexport default UserCreate"]},"metadata":{},"sourceType":"module"}